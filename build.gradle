plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id "org.sonarqube" version "4.2.1.3168"
}
group = 'com.backend'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA
    implementation 'org.springframework.batch:spring-batch-integration' // AsyncItemProcessor, AsyncItemWriter
    implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor" // @ConfigurationProperties
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // mysql
    runtimeOnly 'mysql:mysql-connector-java'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

    // hibernate-types
    implementation 'com.vladmihalcea:hibernate-types-52:2.19.2'

    // csv
    implementation 'com.opencsv:opencsv:5.7.0'

    testImplementation "org.testcontainers:testcontainers:1.17.6"
    implementation platform('org.testcontainers:testcontainers-bom:1.17.6')
    testImplementation('org.testcontainers:mysql')

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    testImplementation 'org.apache.commons:commons-lang3:3.12.0'

    /** sonarqube **/
    implementation 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3'

}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacoco {
    toolVersion = "0.8.7"
}


sonar {
    properties {
        property "sonar.projectKey", "batchproject"
        property "sonar.projectName", "batch-project"
        property "sonar.projectVersion", "1.1"
        property "sonar.host.url", System.getenv("SONAR_URL")
        property "sonar.token", System.getenv("SONAR_TOKEN")
        property "sonar.sources", "src"
        property "sonar.language", "java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.profile", "Sonar way"
        property "sonar.java.binaries", "${buildDir}/classes/java/main"
        property "sonar.test.inclusions", "**/*Test.java"
        property "sonar.exclusions", "**/resources/static/**, **/Q*.class, **/test/**"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}

